package de.rwth.armin.modeling.autopilot.navigation;

component Navigator {
  port
    in Q currentGpsLat,
    in Q currentGpsLon,
    in Z (0 : 9999) goalNodeId,
    in Z (0 : 10000) addNodes_length,
    in Z (0 : 9999) ^ {1,10000} addNodes_id,
    in Q ^ {1,10000} addNodes_gpsLat,
    in Q ^ {1,10000} addNodes_gpsLon,
    in Z (0 : 10000) removeNodes_length,
    in Z (0 : 9999) ^ {1,10000} removeNodes_id,
    in Z (0 : 10000) addOrUpdateEdges_length,
    in Z (0 : 9999) ^ {1,10000} addOrUpdateEdges_fromNodeId,
    in Z (0 : 9999) ^ {1,10000} addOrUpdateEdges_toNodeId,
    in Q (0 : 9999) ^ {1,10000} addOrUpdateEdges_cost,
    in Z (0 : 10000) removeEdges_length,
    in Z (0 : 9999) ^ {1,10000} removeEdges_fromNodeId,
    in Z (0 : 9999) ^ {1,10000} removeEdges_toNodeId,

    out Z (0 : 10000) path_length,
    out Q ^ {1,10000} path_gpsLat,
    out Q ^ {1,10000} path_gpsLon;

  implementation Math {
    static Q ^ {10000,10000} adjacencyMatrix = zeros(10000,10000);
    if addNodes_length > 0 {
      // TODO update internal data structures
    } end
    if removeNodes_length > 0 {
      // TODO update internal data structures
    } end
    if addOrUpdateEdges_length > 0 {
      // TODO update internal data structures
    } end
    if removeEdges_length > 0 {
      // TODO update internal data structures
    } end
    path_length = 0;
  }
}
